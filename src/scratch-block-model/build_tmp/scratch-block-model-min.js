YUI.add("scratch-block-model",function(C){var H=C.Base.create("baseBlockModel",C.Model,[],{_innerBlocksAllowed:false,_topBlocksAllowed:false,_bottomBlocksAllowed:false,_returnsValue:false,_category:null,_defaultInputBlocks:{},copy:function(){var M=this.get("innerBlocks"),L=this.get("statement"),K=this.get("inputBlocks");if(M){M=new C.ModelList();M.add(M.map(function(O){return O.copy();}));}if(K){K=new C.ModelList();K.add(K.map(function(O){return O.copy();}));}var N=new H({innerBlocks:M,statement:L,inputBlocks:K});N._innerBlocksAllowed=this._innerBlocksAllowed;N._topBlocksAllowed=this._topBlocksAllowed;N._bottomBlocksAllowed=this._bottomBlocksAllowed;N._returnsValue=this._returnsValue;N._category=this._category;N._defaultInputBlocks=this._defaultInputBlocks;N.statement=this.statement;return N;},init:function(K){H.superclass.init.call(this,K);this.initializeDefaultBlocks();},createDefaultNumberInputBlockPrototype:function(K){return new H({type:"default",value:K});},createMenuItemPrototypeWithValues:function(K){return new H({type:"menuInput",values:K});},createDegreePrototypeWithValues:function(K){return new H({type:"degreeInput",value:K});},createPointTowardsWithValues:function(K){return new H({type:"pointTowards",value:K});},initializeDefaultBlocks:function(){var K={};C.each(this._defaultInputBlocks,function(N,M){var L;if(C.Lang.isNumber(N)){L=this.createDefaultNumberInputBlockPrototype(N);}else{if(C.Lang.isObject(N)){switch(N.type){case"menu":L=this.createMenuItemPrototypeWithValues(N.values);break;case"degree":L=this.createDegreePrototypeWithValues(N.value);break;case"pointTowards":L=this.createPointTowardsWithValues(N.value);break;default:}}}if(!L){L=this.createDefaultEmptyInput(N);}K[M]=L;},this);this._defaultInputBlocks=K;},evaluate:function(K){}},{ATTRS:{innerBlocks:{value:null},statement:{value:null},inputBlocks:{value:null}}});var F=function(){return new C.ModelList();};var J=C.Base.create("programModel",C.Model,[],{},{ATTRS:{background:{valueFn:F},sprites:{valueFn:F}}});var B=C.Base.create("blockListModel",C.Model,[],{splitBlockList:function(M){var O=this.get("blocks"),L=O.indexOf(M),Q=new C.ModelList(),K=new C.ModelList(),P,N;if(L!==-1){for(N=0;N<O.size();N+=1){if(N<L){Q.add(O.item(N));}else{K.add(O.item(N));}}if(Q.size()>0){this.set("blocks",Q);}else{this.set("blocks",Q);}P=new B({blocks:K});}return P;}},{ATTRS:{x:{value:0},y:{value:0},blocks:{valueFn:F}}});C.BlockListModel=B;C.MoveBlockModel=C.Base.create("moveBlockModel",H,[],{_topBlocksAllowed:true,_bottomBlocksAllowed:true,_category:"motion",statement:"move {numSteps} steps",initialize:function(){},evaluate:function(K){var M=this.get("inputBlocks"),L=K.sprite,N=M.numSteps.evaluate(K);K.sprite.setX(L.getX()+N);}});C.ConstantBlockModel=C.Base.create("ConstantBlockModel",H,[],{_returnsValue:true,type:"constant",_category:"variables",evaluate:function(K){return this.get("value");}},{ATTRS:{value:{value:null}}});C.LessThanBlockModel=C.Base.create("LessThanBlockModel",H,[],{_returnsValue:true,statement:"{left} < {right}",_category:"operators",initialize:function(){},evaluate:function(K){var M=this.get("inputBlocks"),N=M.left.evaluate(K),L=M.right.evaluate(K);if(C.Lang.isObject(N)){N=N.get();}if(C.Lang.isObject(L)){L=L.get();}return N<L;}});C.VariableBlockModel=C.Base.create("VariableBlockModel",H,[],{_returnsValue:true,_category:"variables",evaluate:function(K){return K.getVariable(this.get("variableName"));}},{ATTRS:{variableName:{value:null}}});C.IncrementVariableBlockModel=C.Base.create("IncrementBlockModel",H,[],{_returnsValue:true,statement:"increment {x}",_category:"operators",initialize:function(){},evaluate:function(L){var M=this.get("inputBlocks"),K=M.x.evaluate(L);K.set(K.get()+1);}});C.WhileBlockModel=C.Base.create("whileBlockModel",H,[],{_innerBlocksAllowed:true,_topBlocksAllowed:true,_bottomBlocksAllowed:true,_category:"control",statement:"while {expression}",initialize:function(){},evaluate:function(K){var M,L=this.get("inputBlocks");var N=function(O){O.evaluate(K);};while(L.expression.evaluate(K)){M=this.get("innerBlocks");M.each(N);}}});var G=function(){};G.prototype={loadBlocksForCategory:function(K){return C.Array.map(C.SPRITE_BLOCK_DEFINITIONS[K],function(L){return this.initBlockPrototype(L,K);},this);},initBlockPrototype:function(O,M){var L=C.BLOCK_TYPES[O.blockType],N=O.defaultInputBlocks;var K=C.mix({_category:M,_defaultInputBlocks:O.defaultInput,statement:O.statement},L);return C.Base.create(C.guid(),H,[],K);}};C.BlockDefinitionUtils=new G();var A=C.Base.create("costumeModel",C.Model,[],{},{ATTRS:{width:{value:100},height:{value:100},type:{value:"rect"},style:{value:{}},name:{value:""}}});var I=C.Base.create("spriteModel",C.Model,[],{},{ATTRS:{scripts:{value:F},costumes:{value:F},x:{value:0},y:{value:0},direction:{value:0},costume:{value:null},size:{value:1}}});var D={simpleBlock:{_topBlocksAllowed:true,_bottomBlocksAllowed:true}};C.BLOCK_TYPES=D;var E={motion:[{statement:"move {numSteps} steps",blockType:"simpleBlock",defaultInput:{numSteps:10}},{statement:"turn \u21bb {turnRight} degrees",blockType:"simpleBlock",defaultInput:{turnRight:{type:"degree",value:15}}},{statement:"turn \u21ba {turnLeft} degrees",blockType:"simpleBlock",defaultInput:{turnLeft:{type:"degree",value:15}}},{statement:"point in direction {direction}",blockType:"simpleBlock",defaultInput:{direction:{type:"menu",values:[{name:"right",value:90,isDefault:true},{name:"left",value:-90},{name:"up",value:0},{name:"down",value:180}]}}},{statement:"point towards {sprite}",blockType:"simpleBlock",defaultInput:{sprite:{type:"pointTowards"}}}]};C.SPRITE_BLOCK_DEFINITIONS=E;},"@VERSION@",{requires:["widget","intl","model","model-list","node-screen"]});