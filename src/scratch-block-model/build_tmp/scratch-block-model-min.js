YUI.add("scratch-block-model",function(C){var I,H,F,K,B;I=C.Base.create("baseRenderableModel",C.Model,[],{handleRender:function(){var L=this.get("parent");if(L){L.handleRender();}else{this.fire("render");}},getHoverStatus:function(L){return"bottom";},isValidDropTarget:function(L){return false;}},{ATTRS:{parent:{value:null}}});H=C.Base.create("baseBlockModel",I,[],{_innerBlocksAllowed:false,_topBlocksAllowed:false,_bottomBlocksAllowed:false,_returnsValue:false,_category:null,_defaultInputBlocks:{},statement:null,type:"block",copy:function(O){var P=this.get("innerBlocks"),N,M=this.get("inputBlocks"),L;if(P){N=new C.BlockListModel({parent:this});N.get("blocks").add(P.get("blocks").map(function(R){return R.copy(N);}));}if(M){L=new C.ModelList();L.add(M.map(function(R){return R.copy(L);}));}var Q=new H({innerBlocks:N,inputBlocks:L,value:this.get("value"),parent:O});Q._innerBlocksAllowed=this._innerBlocksAllowed;Q._topBlocksAllowed=this._topBlocksAllowed;Q._bottomBlocksAllowed=this._bottomBlocksAllowed;Q._returnsValue=this._returnsValue;Q._category=this._category;Q._defaultInputBlocks=this._defaultInputBlocks;Q.statement=this.statement;return Q;},isValidDropTarget:function(L){if(L.type==="blockList"){return this._bottomBlocksAllowed||this._topBlocksAllowed;}else{if(this._bottomBlocksAllowed){return L._topBlocksAllowed;}else{if(this._topBlocksAllowed){return L._bottomBlocksAllowed;}else{return L._returnsValue;}}}},getHoverStatus:function(L){if(!(this._bottomBlocksAllowed||this._topBlocksAllowed)){return"self";}else{return L?"top":"bottom";}},init:function(L){H.superclass.init.call(this,L);this.initializeDefaultBlocks();},createDefaultNumberInputBlock:function(L){return new H({type:"default",value:L});},createMenuItemWithValues:function(L){return new H({type:"menuInput",values:L});},createDegreeWithValues:function(L){return new H({type:"degreeInput",value:L});},createPointTowardsWithValues:function(L){return new H({type:"pointTowards",value:L});},createDefaultEmptyInput:function(L){return new H({type:L});},initializeDefaultBlocks:function(){var L={};C.each(this._defaultInputBlocks,function(O,N){var M;if(C.Lang.isNumber(O)){M=this.createDefaultNumberInputBlock(O);}else{if(C.Lang.isObject(O)){switch(O.type){case"menu":M=this.createMenuItemWithValues(O.values);break;case"degree":M=this.createDegreeWithValues(O.value);break;case"pointTowards":M=this.createPointTowardsWithValues(O.value);break;default:}}}if(!M){M=this.createDefaultEmptyInput(O);}L[N]=M;},this);this._defaultInputBlocks=L;},evaluate:function(L){}},{ATTRS:{innerBlocks:{valueFn:function(){return new B({parent:this});},setter:function(L){L.set("parent",this);return L;}},inputBlocks:{value:null},value:{value:null}}});F=function(){return new C.ModelList();};K=C.Base.create("programModel",C.Model,[],{},{ATTRS:{background:{valueFn:F},sprites:{valueFn:F}}});B=C.Base.create("blockListModel",I,[],{initializer:function(){this.after("blocksChange",this.handleRender);},type:"blockList",isValidDropTarget:function(L){return this.get("blocks").size()===0;},splitBlockList:function(N){var P=this.get("blocks"),M=P.indexOf(N),R=new C.ModelList(),L=new C.ModelList(),Q,O;if(M!==-1){for(O=0;O<P.size();O+=1){if(O<M){R.add(P.item(O));}else{L.add(P.item(O));}}this.set("blocks",R);if(R.size()===0&&!this.isInline()){this.destroy();}Q=new B({blocks:L});}return Q;},isInline:function(){return this.get("parent")!==null;}},{ATTRS:{parent:{value:null},x:{value:0},y:{value:0},blocks:{valueFn:F,setter:function(L){if(L){L.each(function(M){M.set("parent",this);},this);}return L;}}}});C.BlockListModel=B;var G=function(){};G.prototype={loadBlocksForCategory:function(L){return C.Array.map(C.SPRITE_BLOCK_DEFINITIONS[L],function(M){return this.initBlockPrototype(M,L);},this);},initBlockPrototype:function(P,N){var M=C.BLOCK_TYPES[P.blockType],O=P.defaultInputBlocks;var L=C.mix({_category:N,_defaultInputBlocks:P.defaultInput,statement:P.statement},M);return C.Base.create(C.guid(),H,[],L);}};C.BlockDefinitionUtils=new G();var A=C.Base.create("costumeModel",C.Model,[],{},{ATTRS:{width:{value:100},height:{value:100},type:{value:"rect"},style:{value:{}},name:{value:""}}});var J=C.Base.create("spriteModel",C.Model,[],{},{ATTRS:{scripts:{value:F},costumes:{value:F},x:{value:0},y:{value:0},direction:{value:0},costume:{value:null},size:{value:1}}});var D={simpleBlock:{_topBlocksAllowed:true,_bottomBlocksAllowed:true},controlBlock:{_topBlocksAllowed:true,_bottomBlocksAllowed:true,_innerBlocksAllowed:true}};C.BLOCK_TYPES=D;var E={motion:[{statement:"move {numSteps} steps",blockType:"simpleBlock",defaultInput:{numSteps:10}},{statement:"turn \u21bb {turnRight} degrees",blockType:"simpleBlock",defaultInput:{turnRight:{type:"degree",value:15}}},{statement:"turn \u21ba {turnLeft} degrees",blockType:"simpleBlock",defaultInput:{turnLeft:{type:"degree",value:15}}},{statement:"point in direction {direction}",blockType:"simpleBlock",defaultInput:{direction:{type:"menu",values:[{name:"right",value:90,isDefault:true},{name:"left",value:-90},{name:"up",value:0},{name:"down",value:180}]}}},{statement:"point towards {sprite}",blockType:"simpleBlock",defaultInput:{sprite:{type:"pointTowards"}}}],control:[{statement:"while {expression}",blockType:"controlBlock",defaultInput:{expression:"blank"}}]};C.SPRITE_BLOCK_DEFINITIONS=E;},"@VERSION@",{requires:["widget","intl","model","model-list","node-screen"]});