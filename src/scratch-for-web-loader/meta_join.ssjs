// mweiss - I've modified this from yproject's meta join so it works with ybuild
var fs = require('fs'), path = require('path');

// Get the loader module name
var pathItems = __dirname.split('/');
var loaderModule = pathItems[pathItems.length-1];

// Get the src directory
var srcDirectory = __dirname+'/../';

var meta_properties = {};

fs.readdir(srcDirectory, function(err, files) {
	files.forEach(function(f) {
		if(f != loaderModule) {
			
			var buildProperties = srcDirectory+f+'/build.json';
			path.exists(buildProperties, function(exists) {  
			
				if(exists) {
				
					fs.readFile(buildProperties, function (err, data) {
			  			if (err) throw err;
			      var buildJson = JSON.parse(data);
						
						var componentName = null, 
							 requires = [],
							 lang = [];
			
						// component name
						if(buildJson){
							componentName = buildJson.name;
						}
						
						// required modules
						requires = buildJson.details.requires;
						
						// lang
						lang = buildJson.details.lang;
						
						if( !componentName || !requires ) {
							console.log("Unable to parse build.properties in folder: "+buildProperties);
						}
						else {
							meta_properties[componentName] = {
									"path": componentName+"/"+componentName+".js",
									"requires": requires
							};
							if(lang.length > 0) {
								meta_properties[componentName].lang = lang;
							}
							
							
							// check if the module is skinable:
							//  ie: assets && assets/moduleName-core.css && assets/skins
							var component = srcDirectory+f+'/';
							if( path.existsSync(component+'assets') &&
								 path.existsSync(component+'assets/'+componentName+'-core.css') &&
								 path.existsSync(component+'assets/skins') ) {
								meta_properties[componentName].skinnable = true;	
							}
							
						}
			
					});
					
				}
				
			});
			
		}
	});
});


process.on('exit', function () {

	var str = "\n\
// Note: this file is auto-generated by meta_join.js. Don't Modify me !\n\
YUI().use(function(Y) {\n\
\n\
	/**\n\
 	* YUI 3 module metadata\n\
 	* @module "+loaderModule+"\n\
	 */\n\
	var CONFIG = {\n\
		groups: {\n\
			'clicrdv': {\n\
				base: '../../../build/',\n\
				combine: false,\n\
				modules: "+JSON.stringify(meta_properties)+"\n\
			}\n\
		}\n\
	};\n\
\n\
	if(typeof YUI_config === 'undefined') { YUI_config = {groups:{}}; }\n\
	Y.mix(YUI_config.groups, CONFIG.groups);\n\
\n\
});";

	fs.writeFileSync( __dirname+'/js/loader.js', str);
	
});
